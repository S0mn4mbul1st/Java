package LAB1;
import java.util.Scanner;
import java.util.Vector;

public class Main 
{

	static Scanner scan;
	static String Line;
	
	public static void loadDocument(String name) 
	{
		Vector<String> clinks=new Vector <String>();
		do
		{
			Line=scan.nextLine ();
			String word[]=Line.split(" ");
			int num=word.length;
			for (int x=0;x<num;x++)
			{
				String link[]=word[x].split("=");
				if (link[0].equalsIgnoreCase("link")&& link.length==2)
				{
					if (correctLink(link[1]))
					{
						clinks.add(link[1].toLowerCase());
					}
				}
			}
		}
		while (!Line.equals("eod"));
		for (int x=0;x<clinks.size();x++)
		{
			System.out.println(clinks.elementAt(x));
		}
	}
	
	
	// accepted only small letters, capitalic letter, digits nad '_' (but not on the begin)
	private static boolean correctLink(String link) 
	{
		if (Character.isLetter(link.charAt(0)))
		{
			if (link.matches("\\w+"))
			{
				return true;
			}
			else
			{
				return false;
			}
		}
		else
		{
			return false;
		}
	}

	private static void drawLine(int n, char ch) 
	{
		 for(int i=0;i<n;i++) 
		  {
			 System.out.print(ch);
		  }
	}


	private static void drawPyramid(int n) 
	{
		for(int i=0;i<n;i++) 
		{
			drawLine(n-i,' ');
			drawLine((2*i)+1,'X');
			System.out.print("\n");
		}
	}

	
	private static void drawChristmassTree(int n) 
	{
		for(int i=0;i<n;i++) 
		{
			for(int j=0;j<=i;j++) 
			{
				drawLine(n-j-1,' ');
				drawLine((2*j)+1,'X');
				System.out.print("\n");
			}
		}	

	}




	/***
	 * commands:
	 * py size
	 *   draw a pyramid with size
	 * ct size
	 *   draw a christmas tree with size
	 * ld documentName
	 *   load document from standard input line by line. Last line consists of only sequence "eod",
	 *   which means end of document
	 * ha
	 *   halt program and finish execution
	 * @param args
	 */
	

	public static void main(String[] args) 
	{
		System.out.println("START");
		scan=new Scanner(System.in);
		boolean halt=false;
		while(!halt) {
			String line=scan.nextLine();
			// empty line and comment line - read next line
			if(line.length()==0 || line.charAt(0)=='#')
				continue;
			// copy line to output (it is easier to find a place of a mistake)
			System.out.println("!"+line);
			String word[]=line.split(" ");
			if(word[0].equalsIgnoreCase("py") && word.length==2) 
			{
				int value=Integer.parseInt(word[1]);
				drawPyramid(value);
				continue;
			}
			if(word[0].equalsIgnoreCase("ct") && word.length==2) 
			{
				int value=Integer.parseInt(word[1]);
				drawChristmassTree(value);
				continue;
			}
			// ld documentName
			if(word[0].equalsIgnoreCase("ld") && word.length==2) 
			{
				loadDocument(word[1]);
				continue;
			}
			// ha
			if(word[0].equalsIgnoreCase("ha") && word.length==1) 
			{
				halt=true;
				continue;
			}
			System.out.println("Wrong command");			
		}
		System.out.println("END OF EXECUTION");
		scan.close();

	}
}